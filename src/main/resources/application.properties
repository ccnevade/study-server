server.port=8888

############################################
##  MySQL数据库连接
############################################
spring.datasource.url = jdbc:mysql://localhost:3306/app_study?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username = root
spring.datasource.password = 123123
spring.datasource.driverClassName = com.mysql.jdbc.Driver
############################################
##  配置自动建表：updata:没有表新建，有表更新操作,控制台显示建表语句
############################################
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

##时间格式化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8


##上传文件位置
upload.file.path=/Users/train/temp/

##读取文件的uri前缀
upload.file.uri=http://localhost:${server.port}

# 设置当URI为/file/**时,才进过静态资源
# 注:如果设置为/**，那么表示任何访问都会经过静态资源路径
spring.mvc.static-path-pattern=/file/**

# 自定义路径
# 注:自定义路径时,默认的四个文件夹下中的“META-INF下的resoures文件夹”仍然有效,其他三个文件夹失效
# (此时:访问ip:端口号/fileData/时，相当于访问到了 “自定义的文件夹”和 “META-INF下的resoures文件夹”);
# 注:搜索文件时，自定义的文件夹的优先级要高于默认的四个文件夹
#spring.resources.static-locations=file:D:/myFile/

# 提示:如果我们显式地把自定义文件夹  和 默认的四个文件夹都写出来，那么都会有效(此时，优先级 从左至右 依次降低)
spring.resources.static-locations = classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${upload.file.path}

##上传文件大小最大值
spring.http.multipart.enabled=true
##单个文件大小
spring.http.multipart.max-file-size=50mb
##单个request数据大小最大值
spring.http.multipart.max-request-size=100mb

